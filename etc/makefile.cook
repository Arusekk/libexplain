/*
 * libexplain - Explain errno values returned by libc functions
 * Copyright (C) 2008-2011 Peter Miller
 * Written by Peter Miller <pmiller@opensource.org.au>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License along
 * with this program. If not, see <http://www.gnu.org/licenses/>.
 */

integration-build-targets +=
    web-site/[project_minus].tar.gz
    ;

/* Need gnu style tar to build the tarball - so try different names */
if [find_command gnutar] then
    tar-cmd = gnutar;
else if [find_command gtar] then
    tar-cmd = gtar;
else
    tar-cmd = tar;


check-tarball: etc/check-tarball.sh web-site/[project_minus].tar.gz
{
    set no-silent;
    sh [resolve etc/check-tarball.sh web-site/[project_minus].tar.gz];
}

source_file_order =
    README
    BUILDING
    LICENSE
    [source_files]

    /*
     * Generated by autoconf
     */
    Makefile.in
    install-sh
    config.guess
    config.sub
    configure
    libexplain/config.h.in
    libexplain/v4l2-chip-ident.h
    test_config/configured.h

    /*
     * version stamps
     */
    libexplain/patchlevel.h
    etc/version.so

    /*
     * for the reference manual
     */
    etc/ref-parts.so
    etc/new.so
    etc/coverage.so

    /*
     * For pkg-config
     */
    libdir/pkgconfig/[project_short].pc.in

    /*
     * for message translators
     */
    po/libexplain.pot
    ;

web-site/%.tar.gz: [source_file_order] debian/control debian/changelog
    set shallow ingredients-fingerprint
{
    if [not [verbose]] then
        function print TAR [target];

    if [exists web-site/%.tar] then
        rm web-site/%.tar
            set clearstat;
    [tar-cmd] --create --file web-site/%.tmp --dereference --files-from\=- ;
data
[unsplit "\n"
    [resolve
        [sort
            [source_file_order]
            debian/changelog
            debian/compat
            debian/control
            debian/rules
        ]
    ]
    [glob 'debian/*.install' ]
]
dataend

    tardy -unu 0 -gnu 0 -una Peter -gna Miller
        -p % -ms 0644 -mc 07022 -now
        [prepost "-rp=" "" [search_list]]
        < web-site/%.tmp
        > web-site/%.tar;
    rm web-site/%.tmp
        set silent;
    gzip -9 -v web-site/%.tar;
}


/*
 * The version stamp is to be updated for every
 * integration and development build.
 */
vs_file = libexplain/patchlevel.h;

[vs_file]:
    set shallow
{
    if [not [verbose]] then
        function print GEN [target];

    echo "'#define PATCHLEVEL \""[version]"\"'"
        > [target];
    aesub -p [project] -c [change]
            "'#define COPYRIGHT_YEARS \"${copyright_years}\"'"
        >> [target];
}

cascade libexplain/version.c = [vs_file];

aemakegen = aemakegen;

Makefile.in: [source_files]
{
    if [not [verbose]] then
        function print GEN [target];

    [aemakegen] -p [project] -c [change] -o [target]
        libdir/pkgconfig/[project_short].pc.in
        ;
    cat [resolve etc/makefile-tail] >> [target];
}

etc/version.so:
    set shallow
{
    if [not [verbose]] then
        function print GEN [target];

    aesub "'.ds v) ${project version}'" > [target];
    aesub "'.ds V) ${version}'" >> [target];
    aesub "'.ds Y) ${copyright_years}'" >> [target];
}

debian/control
debian/changelog
debian/explain.install
debian/libexplain-dev.install
debian/changelog: [source_files]
    set shallow
{
    if [not [verbose]] then
        function print DEB [target];

    /* This actually makes more files than just debian/control */
    [aemakegen] -p [project] -c [change] --target\=debian
        libdir/pkgconfig/[project_short].pc.in
        libexplain/public_config.h
        ;
}


/*
 * if [or
 *     [in [fromto %1D%2 %2 [version]] 001 002 003 004]
 *     [collect "set +e; on_ac_power; expr 1 - $?; exit 0" ]
 * ] then
 */
if [in [fromto %1D%2 %2 [version]] 001 002 003 004 005] then
{
    integration-build-targets += debian-package;
}

web-site/debian/build.sh
debian-package: web-site/[project_minus].tar.gz bin/test_user
    debian/changelog
{
    if [not [verbose]] then
        function print PKG [project_minus];

    local vsn = [collect head -1 [resolve debian/changelog]
                         | sed "'s|.*(\\([^()]*\\).*|\\1|'" ];
    vsn = [fromto %-1 % [vsn]];
    function print "vsn = '"[vsn]"'";
    if [not [in [count [vsn]] 1]] then
        fail "debian version not right";
    local tarball = [project_short]_[vsn].orig.tar.gz;

    local user = [collect [resolve bin/test_user]];
    local key = ;
    if [in [user] archives] then
        key = -k19CEC7D5;
    else
        key = -us -uc;

    /*
     * We fake the .orig.tar.gz file to not have a debian/ directory,
     * by filtering it out with tardy.  This silences a PITA lintian
     * warning, for no real benefit.
     */

    unset GPG_AGENT_INFO &&
    rm -rf web-site/debian &&
    mkdir -p web-site/debian &&
    cd web-site/debian &&
    echo Options Indexes > .htaccess &&
    gunzip < ../[project_minus].tar.gz
        | tardy -exclude "'"[project_minus]"/debian/*'"
        | gzip -9 > [tarball] &&
    tar xzf ../[project_minus].tar.gz &&
    cd [project_minus] &&
#if 0
    dpkg-buildpackage -sgpg [key] -sa &&
#else
    debuild [key] -sa &&
#endif
    cd .. &&
    rm -rf [project_minus] &&
    lintian -iIv --pedantic *.changes
    ;

    cat > web-site/debian/build.sh;
data
#!/bin/sh
version="[vsn]"
set -e
set -x
rm -rf libexplain-${version}
tar xzf libexplain_${version}.orig.tar.gz
zcat libexplain_${version}-1.diff.gz | patch -p0
cd libexplain-${version}
chmod a+rx debian/rules
dpkg-buildpackage -rfakeroot
dataend
}

libdir/pkgconfig/[project_short].pc.in: [source_files]
{
    if [not [verbose]] then
        function print GEN [target];

    [aemakegen] -p\=[project] -c\=[change] --target\=pkg-config
            > [target];
}

libexplain/public_config.h: etc/large.awk libexplain/config.h
{
    if [not [verbose]] then
        function print GEN [target];

    awk -f [resolve etc/large.awk libexplain/config.h] > [target];
}

cascade libexplain/large_file_support.h = libexplain/public_config.h;
